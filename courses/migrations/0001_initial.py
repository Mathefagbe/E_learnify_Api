# Generated by Django 4.1 on 2023-10-10 09:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300, verbose_name='Title')),
                ('image', models.ImageField(upload_to='Course_img/%Y/%M')),
                ('price', models.DecimalField(blank=True, decimal_places=0, max_digits=99999999, null=True, verbose_name='Price')),
                ('discount', models.IntegerField(blank=True, null=True, verbose_name='Discount')),
                ('price_status', models.CharField(blank=True, choices=[('Paid', 'Paid'), ('Free', 'Free')], default='Free', max_length=15, null=True)),
                ('level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermidate', 'Intermidate'), ('Advance', 'Advance')], default='Beginner', max_length=15)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_author', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='courses.category')),
                ('subscribers', models.ManyToManyField(blank=True, related_name='enroll_courses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubCourse',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=300, null=True, verbose_name='Title')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcourse', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review', models.TextField()),
                ('rating', models.IntegerField(validators=[django.core.validators.MaxValueValidator(limit_value=5), django.core.validators.MinValueValidator(limit_value=0)], verbose_name='Rating')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_review', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requirement', models.CharField(blank=True, max_length=100, null=True, verbose_name='requirement')),
                ('about_course', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='courses.aboutcourse')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300, verbose_name='Title')),
                ('is_locked', models.BooleanField(default=False, verbose_name='Is_Locked')),
                ('video', models.FileField(upload_to='videos_uploaded', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4'])], verbose_name='Video')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Duration')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='courses.course')),
                ('is_completed', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('subcourse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcourse_lesson', to='courses.subcourse')),
            ],
        ),
        migrations.AddField(
            model_name='aboutcourse',
            name='course',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='about_course', to='courses.course'),
        ),
    ]
